{"ast":null,"code":"import _defineProperty from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kylemac/Desktop/classwork/properChannels/client/src/components/Board/Board.js\";\nimport React, { Component } from \"react\"; // import \"./Board.css\";\n\nimport MessageList from \"../MessageList\";\nimport API from \"../../utils/API\";\nimport { Col, Row, Container } from \"../Grid\";\nimport { List } from \"../List\";\nimport Message from \"../Message\";\n\nvar Board =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Board, _Component);\n\n  function Board() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Board);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Board)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      message: [],\n      q: \"\"\n    };\n\n    _this.handleInputChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.getSavedMessage = function () {\n      API.getSavedMessage(_this.state.q).then(function (res) {\n        return _this.setState({\n          message: res.data\n        });\n      }).catch(function () {\n        return _this.setState({\n          message: []\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Board, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(MessageList, {\n        title: \"Results\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, this.state.message.length ? React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, this.state.message.map(function (message) {\n        return React.createElement(Message, {\n          key: message.id,\n          title: message.volumeInfo.title,\n          author: message.volumeInfo.author,\n          body: message.volumeInfo.body,\n          category: message.volumeInfo.category,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        });\n      })) : React.createElement(\"h2\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, this.state.message)))));\n    }\n  }]);\n\n  return Board;\n}(Component); // //props.messages\n// const fakeMessages = [\n//     {\n//         district: \"1\",\n//         title: \"title\",\n//         author: \"author\",\n//         body: \"body\",\n//         category: [0],\n//         // title: \"title\",\n//         // name: \"name\",\n//         // category: \"category\",\n//         // message: \"message\"\n//     }\n// ];\n\n\n{}\n/* <h3>{props.title}</h3>\n     <h3>{props.name}</h3> \n     <h4>{props.category}</h4> \n     <h4>{props.message}</h4>  */\n// const Board = props => (\n//     <div>\n//         <h3>\n//             {props.district}\n//         </h3>\n//         <MessageList district = \"2\" />\n//     </div>\n// )\n// (header) district ID/name\n// body(-messages(message-list))\n\nexport default Board;","map":{"version":3,"sources":["/Users/kylemac/Desktop/classwork/properChannels/client/src/components/Board/Board.js"],"names":["React","Component","MessageList","API","Col","Row","Container","List","Message","Board","state","message","q","handleInputChange","event","target","name","value","setState","getSavedMessage","then","res","data","catch","length","map","id","volumeInfo","title","author","body","category"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,SAApC;AACA,SAASC,IAAT,QAAqB,SAArB;AACA,OAAOC,OAAP,MAAoB,YAApB;;IAEMC,K;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACNC,MAAAA,OAAO,EAAE,EADH;AAENC,MAAAA,CAAC,EAAE;AAFG,K;;UAKRC,iB,GAAoB,UAAAC,KAAK,EAAI;AAAA,0BACHA,KAAK,CAACC,MADH;AAAA,UACnBC,IADmB,iBACnBA,IADmB;AAAA,UACbC,KADa,iBACbA,KADa;;AAE3B,YAAKC,QAAL,qBACGF,IADH,EACUC,KADV;AAGD,K;;UAEDE,e,GAAkB,YAAM;AACtBhB,MAAAA,GAAG,CAACgB,eAAJ,CAAoB,MAAKT,KAAL,CAAWE,CAA/B,EACGQ,IADH,CACQ,UAAAC,GAAG;AAAA,eACP,MAAKH,QAAL,CAAc;AACZP,UAAAA,OAAO,EAAEU,GAAG,CAACC;AADD,SAAd,CADO;AAAA,OADX,EAMGC,KANH,CAMS;AAAA,eACL,MAAKL,QAAL,CAAc;AACZP,UAAAA,OAAO,EAAE;AADG,SAAd,CADK;AAAA,OANT;AAWD,K;;;;;;;6BACQ;AACP,aACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,IAAI,EAAC,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAa,QAAA,KAAK,EAAC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKD,KAAL,CAAWC,OAAX,CAAmBa,MAAnB,GACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKd,KAAL,CAAWC,OAAX,CAAmBc,GAAnB,CAAuB,UAAAd,OAAO;AAAA,eAC7B,oBAAC,OAAD;AACE,UAAA,GAAG,EAAEA,OAAO,CAACe,EADf;AAEE,UAAA,KAAK,EAAEf,OAAO,CAACgB,UAAR,CAAmBC,KAF5B;AAIE,UAAA,MAAM,EAAEjB,OAAO,CAACgB,UAAR,CAAmBE,MAJ7B;AAKE,UAAA,IAAI,EAAElB,OAAO,CAACgB,UAAR,CAAmBG,IAL3B;AAME,UAAA,QAAQ,EAAEnB,OAAO,CAACgB,UAAR,CAAmBI,QAN/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAD6B;AAAA,OAA9B,CADH,CADD,GAeC;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6B,KAAKrB,KAAL,CAAWC,OAAxC,CAhBJ,CADF,CADF,CAFF,CADF;AA6BD;;;;EAxDeV,S,GAiEpB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA,CAGmC;AAHlC;;;;AAMD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeQ,KAAf","sourcesContent":["import React, {Component} from \"react\";\n\n// import \"./Board.css\";\nimport MessageList from \"../MessageList\";\nimport API from \"../../utils/API\";\nimport { Col, Row, Container } from \"../Grid\";\nimport { List } from \"../List\";\nimport Message from \"../Message\";\n\nclass Board extends Component {\n    state = {\n      message: [],\n      q: \"\",\n    };\n  //is this where we select (WA)STATA/BOARD\n    handleInputChange = event => {\n      const { name, value } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n  \n    getSavedMessage = () => {\n      API.getSavedMessage(this.state.q)\n        .then(res =>\n          this.setState({\n            message: res.data\n          })\n        )\n        .catch(() =>\n          this.setState({\n            message: []\n          })\n        );\n    };\n    render() {\n      return (\n        <Container>\n          \n          <Row>\n            <Col size=\"md-12\">\n              <MessageList title=\"Results\">\n                {this.state.message.length ? (\n                  <List>\n                    {this.state.message.map(message => (\n                      <Message\n                        key={message.id}\n                        title={message.volumeInfo.title}\n                        \n                        author={message.volumeInfo.author}\n                        body={message.volumeInfo.body}\n                        category={message.volumeInfo.category}\n                        \n                      />\n                    ))}\n                  </List>\n                ) : (\n                  <h2 className=\"text-center\">{this.state.message}</h2>\n                )}\n              </MessageList>\n            </Col>\n          </Row>\n          \n        </Container>\n      );\n    }\n  }\n\n\n\n\n\n\n\n// //props.messages\n// const fakeMessages = [\n//     {\n\n//         district: \"1\",\n//         title: \"title\",\n//         author: \"author\",\n//         body: \"body\",\n//         category: [0],\n\n\n//         // title: \"title\",\n//         // name: \"name\",\n//         // category: \"category\",\n//         // message: \"message\"\n//     }\n// ];\n\n\n{/* <h3>{props.title}</h3>\n      <h3>{props.name}</h3> \n      <h4>{props.category}</h4> \n      <h4>{props.message}</h4>  */}\n\n\n// const Board = props => (\n//     <div>\n//         <h3>\n//             {props.district}\n//         </h3>\n//         <MessageList district = \"2\" />\n//     </div>\n// )\n// (header) district ID/name\n// body(-messages(message-list))\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}
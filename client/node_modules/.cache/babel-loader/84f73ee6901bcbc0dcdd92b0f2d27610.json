{"ast":null,"code":"import _defineProperty from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/kylemac/Desktop/classwork/properChannels/client/src/components/UserProfile/index.js\";\nimport React, { Component } from 'react';\nimport { Container, Col, Row, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\nimport SelectUSState from 'react-select-us-states';\nvar borderStyle = {\n  border: \"1px solid black\"\n};\n\nvar UserProfile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UserProfile, _Component);\n\n  function UserProfile(props) {\n    var _this;\n\n    _classCallCheck(this, UserProfile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserProfile).call(this, props)); // Set initial state with defaults\n\n    _this.handleConnectGoogle = function (event) {} // TODO: Handle connecting account to Google\n    // Event handler to unlink an account from Google\n    ;\n\n    _this.googleUnlink = function () {} // TODO: Call DB to remove account info\n    // Shows correct info depending on whether user has linked a Google account\n    ;\n\n    _this.googleConnectSwitch = function () {\n      var user = _this.props.user;\n\n      if (user) {\n        return !(user.google && user.google.googleId) ? React.createElement(Col, {\n          style: borderStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, \"Google ID: Not linked\"), React.createElement(\"a\", {\n          href: \"auth/connect/google\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, React.createElement(Button, {\n          color: \"primary\",\n          onClick: _this.handleConnectGoogle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, \"Connect to Google\"))) : React.createElement(Col, {\n          style: borderStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, \"Google ID: \", user.google.googleId), React.createElement(\"a\", {\n          href: \"#\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, React.createElement(Button, {\n          color: \"primary\",\n          onClick: _this.googleUnlink,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, \"Unlink from Google\")));\n      }\n    };\n\n    _this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      // address: \"NULL\"\n      addrStreet: '',\n      addrCity: '',\n      addrState: '',\n      addrZip: '' // Populate state with user data\n\n    };\n\n    if (props.user) {\n      var _props$user = props.user,\n          firstName = _props$user.firstName,\n          lastName = _props$user.lastName,\n          address = _props$user.address;\n      if (firstName) _this.state.firstName = firstName;\n      if (lastName) _this.state.lastName = lastName;\n\n      if (address) {\n        var street = address.street,\n            city = address.city,\n            state = address.state,\n            zipCode = address.zipCode;\n        _this.state.addrStreet = street;\n        _this.state.addrCity = city;\n        _this.state.addrState = state;\n        _this.state.addrZip = zipCode;\n      }\n    }\n\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleUsStateSelect = _this.handleUsStateSelect.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } // Handles updating of input entries\n\n\n  _createClass(UserProfile, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    } // Handle submission of form for updating user data\n\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      event.preventDefault();\n      var _this$state = this.state,\n          addrStreet = _this$state.addrStreet,\n          addrCity = _this$state.addrCity,\n          addrState = _this$state.addrState,\n          addrZip = _this$state.addrZip;\n      axios.put('/auth/updateprofile', {\n        address: {\n          street: addrStreet,\n          city: addrCity,\n          state: addrState,\n          zipCode: addrZip\n        }\n      }).then(function (response) {\n        console.log(response);\n      });\n    }\n  }, {\n    key: \"handleUsStateSelect\",\n    value: function handleUsStateSelect(selectedValue) {\n      console.log(selectedValue);\n      this.setState({\n        addrState: selectedValue\n      });\n    } // Handle connecting account to Google\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"UserProfile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Profile for \", this.props.user.local.username), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Personal Info\"), React.createElement(Form, {\n        style: borderStyle,\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), React.createElement(Col, {\n        xs: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"firstName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"First Name:\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"firstName\",\n        id: \"firstName\",\n        value: this.state.firstName,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        xs: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(Col, {\n        xs: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"lastName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Last Name:\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"lastName\",\n        id: \"lastName\",\n        value: this.state.lastName,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      })), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }), React.createElement(Col, {\n        xs: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"addrStreet\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Street Address\"), React.createElement(Input, {\n        type: \"text\",\n        id: \"addrStreet\",\n        name: \"addrStreet\",\n        value: this.state.addrStreet,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      })), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), React.createElement(Col, {\n        xs: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"addrCity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"City\"), React.createElement(Input, {\n        type: \"text\",\n        id: \"addrCity\",\n        name: \"addrCity\",\n        value: this.state.addrCity,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        xs: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"addrState\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"State\"), React.createElement(SelectUSState, {\n        id: \"addrState\",\n        name: \"addrState\",\n        className: \"form-control\" // value doesn't work, SelectUSState class won't pass value as props to necessary children\n        // value={this.state.addrState}\n        ,\n        onChange: this.handleUsStateSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        xs: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"addrZip\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"Zip Code\"), React.createElement(Input, {\n        type: \"text\",\n        id: \"addrZip\",\n        name: \"addrZip\",\n        value: this.state.addrZip,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      })), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"Save\"))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"Google Account Info\"), this.googleConnectSwitch()));\n    }\n  }]);\n\n  return UserProfile;\n}(Component);\n\nexport default UserProfile;","map":{"version":3,"sources":["/Users/kylemac/Desktop/classwork/properChannels/client/src/components/UserProfile/index.js"],"names":["React","Component","Container","Col","Row","Button","Form","FormGroup","Label","Input","FormText","axios","Redirect","SelectUSState","borderStyle","border","UserProfile","props","handleConnectGoogle","event","googleUnlink","googleConnectSwitch","user","google","googleId","state","firstName","lastName","addrStreet","addrCity","addrState","addrZip","address","street","city","zipCode","handleSubmit","bind","handleChange","handleUsStateSelect","setState","target","name","value","preventDefault","put","then","response","console","log","selectedValue","local","username"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Container, Col, Row, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport axios from 'axios'\nimport { Redirect } from 'react-router-dom'\nimport SelectUSState from 'react-select-us-states'\n\nconst borderStyle = {\n    border: \"1px solid black\"\n}\n\nclass UserProfile extends Component {\n\tconstructor(props) {\n        super(props)\n\n        // Set initial state with defaults\n\t\tthis.state = {\n            firstName: \"\",\n            lastName: \"\",\n            // address: \"NULL\"\n\t\t\taddrStreet: '',\n\t\t\taddrCity: '',\n\t\t\taddrState: '',\n\t\t\taddrZip: '',\n        }\n\n        // Populate state with user data\n        if (props.user) {\n            const {firstName, lastName, address} = props.user\n            \n            if (firstName) this.state.firstName = firstName\n            if (lastName) this.state.lastName = lastName\n            if (address) {\n                const { street, city, state, zipCode } = address\n                this.state.addrStreet = street;\n                this.state.addrCity = city;\n                this.state.addrState = state;\n                this.state.addrZip = zipCode;\n            }\n        }\n\n\t\tthis.handleSubmit = this.handleSubmit.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n        this.handleUsStateSelect = this.handleUsStateSelect.bind(this);\n\t}\n    \n    // Handles updating of input entries\n\thandleChange(event) {\n\t\tthis.setState({\n\t\t\t[event.target.name]: event.target.value\n\t\t})\n\t}\n\n\t// Handle submission of form for updating user data\n\thandleSubmit(event) {\n        event.preventDefault()\n        const {addrStreet, addrCity, addrState, addrZip } = this.state\n\n        axios.put('/auth/updateprofile',  {\n            address: {\n                street: addrStreet,\n                city: addrCity,\n                state: addrState,\n                zipCode: addrZip\n            }\n        }).then(response => {\n            console.log(response);\n        })\n\n    }\n    \n    handleUsStateSelect(selectedValue) {\n        console.log(selectedValue)\n\t\tthis.setState({addrState: selectedValue})\n    }\n    \n    // Handle connecting account to Google\n    handleConnectGoogle = event => {\n        // TODO: Handle connecting account to Google\n    }\n\n    // Event handler to unlink an account from Google\n    googleUnlink = () => {\n        // TODO: Call DB to remove account info\n    }\n\n    // Shows correct info depending on whether user has linked a Google account\n    googleConnectSwitch = () => {\n        const {user} = this.props\n        if (user) {\n            return (!(user.google && user.google.googleId))\n            ?\n            <Col style={borderStyle}>\n                <p>Google ID: Not linked</p>\n                <a href=\"auth/connect/google\"><Button color=\"primary\" onClick={this.handleConnectGoogle}>Connect to Google</Button></a>\n            </Col>\n            :\n            <Col style={borderStyle}>\n                <p>Google ID: {user.google.googleId}</p>\n                <a href=\"#\"><Button color=\"primary\" onClick={this.googleUnlink} >Unlink from Google</Button></a>\n            </Col>\n        }\n    }\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"UserProfile\">\n                <Container>\n                    <h2>Profile for {this.props.user.local.username}</h2>\n                    \n                    <br/>\n\n                    <h3>Personal Info</h3>\n                    \n                    {/* Form for updating user info */}\n                    <Form \n                        style={borderStyle}\n                        onSubmit={this.handleSubmit}\n                    >\n                        {/* Name row: first and last */}\n                        <Row>\n                            <Col />\n\n                            <Col xs=\"4\" >\n                                <FormGroup>\n                                    <Label htmlFor=\"firstName\">First Name:</Label>\n                                    <Input type=\"text\" name=\"firstName\" id=\"firstName\" value={this.state.firstName} onChange={this.handleChange} />\n                                </FormGroup>\n                            </Col>\n\n                            <Col xs=\"1\" />\n\n                            <Col xs=\"4\" >\n                                <FormGroup>\n                                    <Label htmlFor=\"lastName\">Last Name:</Label>\n                                    <Input type=\"text\" name=\"lastName\" id=\"lastName\" value={this.state.lastName} onChange={this.handleChange} />\n                                </FormGroup>\n                            </Col>\n\n                            <Col />\n                        </Row>\n\n                        {/* Address first row: street address */}\n                        <Row>\n                            <Col />\n                            <Col xs=\"9\">\n                                <FormGroup>\n                                    <Label htmlFor=\"addrStreet\">Street Address</Label>\n                                    <Input \n                                        type=\"text\"\n                                        id=\"addrStreet\"\n                                        name=\"addrStreet\"\n                                        value={this.state.addrStreet}\n                                        onChange={this.handleChange}\n                                    />\n                                </FormGroup>\n                            </Col>\n                            <Col />\n                        </Row>\n                        \n                        {/* Address second row: city/state/zip */}\n                        <Row>\n                            <Col />\n\n                            <Col xs=\"4\">\n                                <FormGroup>\n                                    <Label htmlFor=\"addrCity\">City</Label>\n                                    <Input \n                                        type=\"text\"\n                                        id=\"addrCity\"\n                                        name=\"addrCity\"\n                                        value={this.state.addrCity}\n                                        onChange={this.handleChange}\n                                    />\n                                </FormGroup>\n                            </Col>\n\n                            <Col xs=\"3\">\n                                <FormGroup>\n                                    <Label htmlFor=\"addrState\">State</Label>\n                                    <SelectUSState\n                                        id=\"addrState\"\n                                        name=\"addrState\"\n                                        className=\"form-control\"\n                                        // value doesn't work, SelectUSState class won't pass value as props to necessary children\n                                        // value={this.state.addrState}\n                                        onChange={this.handleUsStateSelect} \n                                    />\n                                </FormGroup>\n                            </Col>\n\n                            <Col xs=\"2\">\n                                <FormGroup>\n                                    <Label htmlFor=\"addrZip\">Zip Code</Label>\n                                    <Input\n                                        type=\"text\"\n                                        id=\"addrZip\"\n                                        name=\"addrZip\"\n                                        value={this.state.addrZip}\n                                        onChange={this.handleChange}\n                                    />\n                                </FormGroup>\n                            </Col>\n\n                            <Col />\n                        </Row>\n\n                        <Col>\n                            <Button color=\"primary\" type=\"submit\" >Save</Button>\n                        </Col>\n                    </Form>\n\n                    <br/>\n\n                    <h3>Google Account Info</h3>\n                    {\n                        this.googleConnectSwitch()\n                    }\n                    \n                </Container>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default UserProfile\n"]},"metadata":{},"sourceType":"module"}
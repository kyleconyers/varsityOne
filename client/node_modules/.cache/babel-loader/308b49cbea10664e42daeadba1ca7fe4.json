{"ast":null,"code":"import _assertThisInitialized from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _classCallCheck from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kylemac/Desktop/classwork/properChannels/client/src/components/CenterBody/centerBody.js\";\nimport React from \"react\";\nimport \"./centerBody.css\";\n\nvar CenterBody = function CenterBody(props) {\n  return React.createElement(\"div\", {\n    className: \"centerBody\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4\n    },\n    __self: this\n  }, props.children);\n}; // const React = require('react')\n\n\nvar ReactDOM = require('react-dom');\n\nvar request = require('axios');\n\nvar url = 'http://localhost:3000/messages';\nvar fD = ReactDOM.findDOMNode;\n\nvar MessageList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MessageList, _React$Component);\n\n  function MessageList() {\n    _classCallCheck(this, MessageList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MessageList).apply(this, arguments));\n  }\n\n  _createClass(MessageList, [{\n    key: \"render\",\n    value: function render() {\n      var messages = this.props.messages;\n      if (!messages || !messages.length > 0) return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"No messages yet\");\n      return React.createElement(\"table\", {\n        className: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"caption\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"Messages\"), React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        className: \"span2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"th\", {\n        className: \"span10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Message\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, messages.map(function (message) {\n        var d = new Date(message.created);\n        return React.createElement(\"tr\", {\n          key: message._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          className: \"span2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, message.name, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }), d.toUTCString()), React.createElement(\"td\", {\n          className: \"span10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, message.category), React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, message.title), message.message));\n      })));\n    }\n  }]);\n\n  return MessageList;\n}(React.Component);\n\nvar NewMessage =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(NewMessage, _React$Component2);\n\n  function NewMessage(props) {\n    var _this;\n\n    _classCallCheck(this, NewMessage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NewMessage).call(this, props));\n    _this.addMessage = _this.addMessage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.keyup = _this.keyup.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(NewMessage, [{\n    key: \"addMessage\",\n    value: function addMessage() {\n      var name = fD(this.refs.name).value.trim();\n      var category = fD(this.refs.category).value.trim();\n      var title = fD(this.refs.title).value.trim();\n      var message = fD(this.refs.message).value.trim();\n\n      if (!name || !message) {\n        return console.error('Name and message cannot be empty');\n      }\n\n      this.props.addMessageCb({\n        name: name,\n        category: category,\n        title: title,\n        message: message\n      });\n      fD(this.refs.name).value = '';\n      fD(this.refs.category).value = '';\n      fD(this.refs.title).value = '';\n      fD(this.refs.message).value = '';\n    }\n  }, {\n    key: \"keyup\",\n    value: function keyup(e) {\n      if (e.keyCode == 13) return this.addMessage();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"row-fluid\",\n        id: \"new-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"span12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"well form-inline\",\n        onKeyUp: this.keyup,\n        onSubmit: this.addMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        className: \"input-small\",\n        placeholder: \"\\u0412\\u0430\\u0448\\u0435 \\u0438\\u043C\\u044F\",\n        ref: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"category\",\n        className: \"input-small\",\n        placeholder: \"\\u043A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F\",\n        ref: \"category\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        className: \"input-small\",\n        placeholder: \"\\u0442\\u0435\\u043C\\u0430\",\n        ref: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"textarea\",\n        name: \"message\",\n        className: \"\",\n        rows: \"7\",\n        placeholder: \"\\u0442\\u0435\\u043A\\u0441\\u0442 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u044F\",\n        ref: \"message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(\"a\", {\n        id: \"send\",\n        className: \"btn btn-primary\",\n        onClick: this.addMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"\\u041E\\u041F\\u0423\\u0411\\u041B\\u0418\\u041A\\u041E\\u0412\\u0410\\u0422\\u042C\"))));\n    }\n  }]);\n\n  return NewMessage;\n}(React.Component);\n\nvar MessageBoard =\n/*#__PURE__*/\nfunction (_React$Component3) {\n  _inherits(MessageBoard, _React$Component3);\n\n  function MessageBoard(ops) {\n    var _this2;\n\n    _classCallCheck(this, MessageBoard);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(MessageBoard).call(this, ops));\n    _this2.addMessage = _this2.addMessage.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    if (_this2.props.messages) _this2.state = {\n      messages: _this2.props.messages\n    };\n    return _this2;\n  }\n\n  _createClass(MessageBoard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      request.get(url).then(function (response) {\n        return response.data;\n      }).then(function (messages) {\n        console.log(messages);\n\n        if (!messages || !messages.length) {\n          return;\n        }\n\n        console.log(messages);\n\n        _this3.setState({\n          messages: messages\n        });\n      });\n    }\n  }, {\n    key: \"addMessage\",\n    value: function addMessage(message) {\n      var _this4 = this;\n\n      var messages = this.state.messages;\n      request.post(url, message).then(function (result) {\n        return result.data;\n      }).then(function (data) {\n        if (!data) {\n          return console.error('Failed to save');\n        }\n\n        console.log('Saved!');\n        messages.unshift(data);\n\n        _this4.setState({\n          messages: messages\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(NewMessage, {\n        messages: this.state.messages,\n        addMessageCb: this.addMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), React.createElement(MessageList, {\n        messages: this.state.messages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return MessageBoard;\n}(React.Component);\n\nexport default CenterBody;\nmodule.exports = MessageBoard;","map":{"version":3,"sources":["/Users/kylemac/Desktop/classwork/properChannels/client/src/components/CenterBody/centerBody.js"],"names":["React","CenterBody","props","children","ReactDOM","require","request","url","fD","findDOMNode","MessageList","messages","length","map","message","d","Date","created","_id","name","toUTCString","category","title","Component","NewMessage","addMessage","bind","keyup","refs","value","trim","console","error","addMessageCb","e","keyCode","MessageBoard","ops","state","get","then","response","data","log","setState","post","result","unshift","module","exports"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./centerBody.css\"\n\nconst CenterBody = props => <div className=\"centerBody\">{props.children}</div>\n\n// const React = require('react')\nconst ReactDOM = require('react-dom')\nconst request = require('axios')\n\nconst url = 'http://localhost:3000/messages'\nconst fD = ReactDOM.findDOMNode\n\nclass MessageList extends React.Component {\n  render() {\n    var messages = this.props.messages\n    if (!messages || !messages.length>0) return (\n        <p>No messages yet</p>\n    )\n    return (\n      <table className=\"table\">\n        <caption>Messages</caption>\n        <thead>\n          <tr>\n            <th className=\"span2\">Name</th>\n            <th className=\"span10\">Message</th>\n          </tr>\n        </thead>\n        <tbody>\n          {messages.map(function(message){\n            const d = new Date(message.created)\n            return (\n              <tr key={message._id}>\n                <td className=\"span2\">{message.name}<br />{d.toUTCString()}</td>\n                <td className=\"span10\"><h3>{message.category}</h3><h3>{message.title}</h3>{message.message}</td>\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n    )\n  }\n}\n\nclass NewMessage extends React.Component {\n  constructor(props) {\n    super(props)\n    this.addMessage = this.addMessage.bind(this)\n    this.keyup = this.keyup.bind(this)\n  }\n  addMessage() {\n    let name = fD(this.refs.name).value.trim()\n    let category = fD(this.refs.category).value.trim()\n    let title = fD(this.refs.title).value.trim()\n    let message = fD(this.refs.message).value.trim()\n    if (!name || !message) {\n      return console.error('Name and message cannot be empty')\n    }\n    this.props.addMessageCb({\n      name: name,\n      category: category,\n      title: title,\n      message: message\n    })\n    fD(this.refs.name).value = ''\n    fD(this.refs.category).value = ''\n    fD(this.refs.title).value = ''\n    fD(this.refs.message).value = ''\n  }\n  keyup(e) {\n    if (e.keyCode == 13) return this.addMessage()\n  }\n  render() {\n    return (\n      <div className=\"row-fluid\" id=\"new-message\">\n        <div className=\"span12\">\n          <form className=\"well form-inline\" onKeyUp={this.keyup} onSubmit={this.addMessage}>\n            <input\n              type=\"text\" name=\"username\"\n              className=\"input-small\" placeholder=\"Ваше имя\" ref=\"name\"/><br />\n            <input\n              type=\"text\" name=\"category\" className=\"input-small\"\n              placeholder=\"категория\" ref=\"category\" /><br />\n            <input\n              type=\"text\" name=\"title\" className=\"input-small\"\n              placeholder=\"тема\" ref=\"title\" /><br />\n            <input\n              type=\"textarea\" name=\"message\" className=\"\" rows=\"7\"\n              placeholder=\"текст сообщения\" ref=\"message\" /><br />\n            <a id=\"send\" className=\"btn btn-primary\"\n              onClick={this.addMessage}>ОПУБЛИКОВАТЬ</a>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nclass MessageBoard extends React.Component {\n  constructor(ops) {\n    super(ops)\n    this.addMessage = this.addMessage.bind(this)\n    if (this.props.messages)\n      this.state = {messages: this.props.messages}\n  }\n  componentDidMount() {\n    request.get(url)\n      .then(response => response.data)\n      .then(messages => {\n        console.log(messages)\n        if(!messages || !messages.length){\n          return;\n        }\n        console.log(messages)\n        this.setState({messages: messages})\n      })\n  }\n  addMessage(message) {\n    let messages = this.state.messages\n    request.post(url, message)\n      .then(result => result.data)\n      .then((data) =>{\n        if(!data){\n          return console.error('Failed to save')\n        }\n        console.log('Saved!')\n        messages.unshift(data)\n        this.setState({messages: messages})\n    })\n  }\n  render() {\n    return (\n      <div>\n        <NewMessage messages={this.state.messages} addMessageCb={this.addMessage} />\n        <MessageList messages={this.state.messages} />\n      </div>\n    )\n  }\n}\n\n\nexport default CenterBody;\nmodule.exports = MessageBoard"]},"metadata":{},"sourceType":"module"}
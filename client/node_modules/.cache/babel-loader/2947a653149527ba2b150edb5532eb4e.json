{"ast":null,"code":"import _defineProperty from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kylemac/Desktop/classwork/properChannels/client/src/components/Board/Board.js\";\nimport React, { Component } from \"react\"; // import \"./Board.css\";\n\nimport MessageList from \"../MessageList\";\nimport API from \"../../utils/API\";\nimport { Col, Row, Container } from \"../Grid\";\nimport { List } from \"../List\";\nimport Message from \"../Message\";\nimport PostForm from \"../PostForm\";\nimport Card from \"../Card\";\n\nvar Board =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Board, _Component);\n\n  function Board() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Board);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Board)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      messages: [],\n      currentUsState: \"\",\n      currentForumId: \"\"\n    };\n\n    _this.getSavedMessage = function (forum_id) {\n      var tags = window.location.href.split(\"/\");\n      var tag = \"all\";\n\n      if (tags.length > 5) {\n        tag = tags[5];\n      }\n\n      API.getSavedMessageByForumAndTag(forum_id, tag).then(function (res) {\n        console.log(res.data);\n\n        _this.setState({\n          currentForumId: forum_id,\n          messages: res.data\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleInputChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value)); // console.log(\"inside change\")\n\n    };\n\n    _this.handleMessageSave = function (id) {\n      // const message = this.state.message.find(message => message.id === id);\n      var tags = window.location.href.split(\"/\");\n      var tag = tags[5];\n      console.log(_this.props);\n      API.saveMessage({\n        //this.state.currentusstate\n        forum_id: _this.state.currentForumId,\n        user: _this.props.user._id,\n        content: _this.state.messageText,\n        date: new Date(),\n        tag: tag\n      }).then(function () {\n        return _this.setState({\n          messageText: \"\"\n        });\n      }).then(function () {\n        return _this.getSavedMessage(_this.state.currentForumId);\n      });\n    };\n\n    _this.handleFormSubmit = function (event) {\n      event.preventDefault();\n\n      if (_this.state.messageText) {\n        _this.handleMessageSave(); // this.db.insert();\n\n\n        console.log(\"inside sumbit\");\n      } else {\n        console.log(\"EMPTY MESSAGE, DID NOT SUBMIT\");\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Board, [{\n    key: \"componentDidMount\",\n    //passvvvvv form_id or whatever message board we are on \n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var path = window.location.pathname.split(\"/\");\n\n      if (path[1] !== 'forum') {\n        // throw exception because we dont understand how this url is formatted\n        return;\n      }\n\n      var forumName = path[2].toUpperCase();\n\n      if (forumName) {\n        console.log(forumName);\n        API.getSavedForum(forumName) // .then(data => data.json())\n        .then(function (data) {\n          if (data.data) {\n            var forumId = data.data._id;\n\n            _this2.getSavedMessage(forumId);\n          }\n        });\n      }\n    } //load data.data toooooo load this into state\n    //store array of possibble US states into STATEdom\n\n  }, {\n    key: \"render\",\n\n    /*\n    */\n    value: function render() {\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(Card, {\n        title: \"Post Content\",\n        icon: \"far fa-book\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(PostForm, {\n        handleInputChange: this.handleInputChange,\n        handleFormSubmit: this.handleFormSubmit,\n        messageText: this.state.messageText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      })), React.createElement(MessageList, {\n        messages: this.state.messages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Board;\n}(Component);\n\nexport default Board;","map":{"version":3,"sources":["/Users/kylemac/Desktop/classwork/properChannels/client/src/components/Board/Board.js"],"names":["React","Component","MessageList","API","Col","Row","Container","List","Message","PostForm","Card","Board","state","messages","currentUsState","currentForumId","getSavedMessage","forum_id","tags","window","location","href","split","tag","length","getSavedMessageByForumAndTag","then","res","console","log","data","setState","catch","err","handleInputChange","event","target","name","value","handleMessageSave","id","props","saveMessage","user","_id","content","messageText","date","Date","handleFormSubmit","preventDefault","path","pathname","forumName","toUpperCase","getSavedForum","forumId"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\n// import \"./Board.css\";\nimport MessageList from \"../MessageList\";\nimport API from \"../../utils/API\";\nimport { Col, Row, Container } from \"../Grid\";\nimport { List } from \"../List\";\nimport Message from \"../Message\";\nimport PostForm from \"../PostForm\";\nimport Card from \"../Card\";\n\n\n      class Board extends Component {\n     \n    \n    state = {\n\n        messages: [],\n        currentUsState: \"\",\n        currentForumId: \"\"\n      };\n      //passvvvvv form_id or whatever message board we are on \n    componentDidMount() {\n        const path = window.location.pathname.split(\"/\");\n        if(path[1] !== 'forum'){\n          // throw exception because we dont understand how this url is formatted\n          return;\n        }\n        const forumName = path[2].toUpperCase();\n        if (forumName) {\n          console.log(forumName);\n          API.getSavedForum(forumName)\n          // .then(data => data.json())\n          .then(data => {\n            if (data.data) {\n              const forumId = data.data._id;\n              this.getSavedMessage(forumId);\n            }\n          });\n        }\n\n      }\n    //load data.data toooooo load this into state\n    //store array of possibble US states into STATEdom\n    getSavedMessage = (forum_id) => {\n\n        var tags = window.location.href.split(\"/\");\n        var tag = \"all\";\n        if (tags.length > 5) {\n          tag = tags[5];\n        }\n\n\n        API.getSavedMessageByForumAndTag(forum_id, tag)\n          .then(res =>{\n            console.log(res.data)\n            this.setState({\n              currentForumId: forum_id,\n              messages: res.data\n            })}\n          )\n          .catch(err => console.log(err));\n      };\n      //get path \n     //This Green Part needs to be turned into message section\n     ////////////////////////////////\n      handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n          [name]: value\n        });\n        // console.log(\"inside change\")\n      };\n   \n    handleMessageSave = id => {\n        // const message = this.state.message.find(message => message.id === id);\n       \n        var tags = window.location.href.split(\"/\");\n        var tag = tags[5];\n    \n\n        console.log(this.props)\n        API.saveMessage({\n          //this.state.currentusstate\n          forum_id: this.state.currentForumId,\n          user: this.props.user._id,\n          content: this.state.messageText,\n          date: new Date(),\n          tag: tag\n        }).then(()=>this.setState({messageText:\"\"}))\n        .then(() => this.getSavedMessage(this.state.currentForumId));\n      };\n      // resUser._id\n     \n      handleFormSubmit = event => {\n        event.preventDefault();\n        if (this.state.messageText) {\n          this.handleMessageSave();\n          // this.db.insert();\n          console.log(\"inside sumbit\")\n        } else {\n          console.log(\"EMPTY MESSAGE, DID NOT SUBMIT\")\n        }\n      };\n    \n      \n\n      /*\n      */\n    \n      render() {\n        return (\n          <Container>\n            \n            <Row>\n              <Col size=\"md-12\">\n              <Card title=\"Post Content\" icon=\"far fa-book\">\n                  <PostForm\n                     handleInputChange={this.handleInputChange}\n                     handleFormSubmit={this.handleFormSubmit}\n                     messageText={this.state.messageText}\n                    />\n              </Card>  \n\n                  <MessageList \n                    messages = {this.state.messages}\n                  />\n\n              </Col>\n             </Row>\n\n            {/* <Row>\n              <Message message={this.state.messages[0]}>\n              \n              </Message> \n                 <MessageList title=\"Results\">\n                  {this.state.message ? (\n                    <List>\n                      {this.state.message.map(message => (\n                        <Message\n                          key={message.id}\n                          title={message.title}\n                          \n                         \n                          author={message.author}\n                          body={message.body}\n                          category={message.category}\n                          \n                        />\n                      ))}\n                    </List>\n                  ) : (\n                    <h2 className=\"text-center\">{this.state.message}</h2>\n                  )}\n                </MessageList> \n               \n            </Row> */}\n            \n          </Container>\n        );\n      }\n    }\n\n\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}
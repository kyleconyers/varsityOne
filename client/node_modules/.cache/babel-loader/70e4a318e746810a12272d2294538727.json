{"ast":null,"code":"import _defineProperty from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/kylemac/Desktop/classwork/properChannels/client/src/components/UserProfile/index.js\";\nimport React, { Component } from 'react';\nimport { Container, Col, Row, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\nvar borderStyle = {\n  border: \"1px solid black\"\n};\n\nvar UserProfile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UserProfile, _Component);\n\n  function UserProfile(props) {\n    var _this;\n\n    _classCallCheck(this, UserProfile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserProfile).call(this, props)); // Set initial state with defaults\n\n    _this.handleConnectGoogle = function (event) {// TODO: Handle connecting account to Google\n    };\n\n    _this.googleConnectSwitch = function () {\n      var user = _this.props.user;\n\n      if (user) {\n        return !(user.google && user.google.googleId) ? React.createElement(Col, {\n          style: borderStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, \"Google ID: Not linked\"), React.createElement(\"a\", {\n          href: \"auth/connect/google\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, React.createElement(Button, {\n          onClick: _this.handleConnectGoogle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, \"Connect to Google\"))) : React.createElement(Col, {\n          style: borderStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, \"Google ID: \", user.google.googleId), React.createElement(\"a\", {\n          href: \"#\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(Button, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, \"Unlink from Google\")));\n      }\n    };\n\n    _this.state = {\n      firstName: \"NULL\",\n      lastName: \"NULL\",\n      address: \"NULL\" // Populate state with user data\n\n    };\n\n    if (props.user) {\n      var _props$user = props.user,\n          firstName = _props$user.firstName,\n          lastName = _props$user.lastName,\n          address = _props$user.address;\n      if (firstName) _this.state.firstName = firstName;\n      if (lastName) _this.state.lastName = lastName;\n      if (address) _this.state.address = address;\n    }\n\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } // Handles updating of input entries\n\n\n  _createClass(UserProfile, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    } // Handle submission of form for updating user data\n\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      event.preventDefault();\n      axios.put('/auth/updateprofile', {\n        address: this.state.address\n      }).then(function (response) {\n        console.log(response);\n      });\n    } // Handle connecting account to Google\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"UserProfile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Profile for \", this.props.user.local.username), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Personal Info\"), React.createElement(Form, {\n        style: borderStyle,\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"firstName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"First Name:\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"firstName\",\n        id: \"firstName\",\n        value: this.state.firstName,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"lastName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Last Name:\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"lastName\",\n        id: \"lastName\",\n        value: this.state.lastName,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Address:\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"address\",\n        id: \"address\",\n        value: this.state.address,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Save\"))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Google Account Info\"), this.googleConnectSwitch()));\n    }\n  }]);\n\n  return UserProfile;\n}(Component);\n\nexport default UserProfile;","map":{"version":3,"sources":["/Users/kylemac/Desktop/classwork/properChannels/client/src/components/UserProfile/index.js"],"names":["React","Component","Container","Col","Row","Button","Form","FormGroup","Label","Input","FormText","axios","Redirect","borderStyle","border","UserProfile","props","handleConnectGoogle","event","googleConnectSwitch","user","google","googleId","state","firstName","lastName","address","handleSubmit","bind","handleChange","setState","target","name","value","preventDefault","put","then","response","console","log","local","username"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Container, Col, Row, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport axios from 'axios'\nimport { Redirect } from 'react-router-dom'\n\nconst borderStyle = {\n    border: \"1px solid black\"\n}\n\nclass UserProfile extends Component {\n\tconstructor(props) {\n        super(props)\n\n        // Set initial state with defaults\n\t\tthis.state = {\n            firstName: \"NULL\",\n            lastName: \"NULL\",\n\t\t\taddress: \"NULL\"\n        }\n\n        // Populate state with user data\n        if (props.user) {\n            const {firstName, lastName, address} = props.user\n            \n            if (firstName) this.state.firstName = firstName\n            if (lastName) this.state.lastName = lastName\n            if (address) this.state.address = address\n        }\n\n\t\tthis.handleSubmit = this.handleSubmit.bind(this)\n\t\tthis.handleChange = this.handleChange.bind(this)\n\t}\n    \n    // Handles updating of input entries\n\thandleChange(event) {\n\t\tthis.setState({\n\t\t\t[event.target.name]: event.target.value\n\t\t})\n\t}\n\n\t// Handle submission of form for updating user data\n\thandleSubmit(event) {\n        event.preventDefault()\n        \n        axios.put('/auth/updateprofile',  {\n            address: this.state.address\n        }).then(response => {\n            console.log(response);\n        })\n\n    }\n    \n    // Handle connecting account to Google\n    handleConnectGoogle = event => {\n        // TODO: Handle connecting account to Google\n    }\n\n    googleConnectSwitch = () => {\n        const {user} = this.props\n        if (user) {\n            return (!(user.google && user.google.googleId))\n            ?\n            <Col style={borderStyle}>\n                <p>Google ID: Not linked</p>\n                <a href=\"auth/connect/google\"><Button onClick={this.handleConnectGoogle}>Connect to Google</Button></a>\n            </Col>\n            :\n            <Col style={borderStyle}>\n                <p>Google ID: {user.google.googleId}</p>\n                <a href=\"#\"><Button color=\"primary\" >Unlink from Google</Button></a>\n            </Col>\n        }\n    }\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"UserProfile\">\n                <Container>\n                    <h2>Profile for {this.props.user.local.username}</h2>\n                    \n                    <br/>\n\n                    <h3>Personal Info</h3>\n                    {/* Form for updating user info */}\n                    <Form \n                        style={borderStyle}\n                        onSubmit={this.handleSubmit}\n                    >\n                        <Col>\n                            <FormGroup>\n                                <Label htmlFor=\"firstName\">First Name:</Label>\n                                <Input type=\"text\" name=\"firstName\" id=\"firstName\" value={this.state.firstName} onChange={this.handleChange} />\n                            </FormGroup>\n                        </Col>\n                        {/* <br/> */}\n                        <Col>\n                            <FormGroup>\n                                <Label htmlFor=\"lastName\">Last Name:</Label>\n                                <Input type=\"text\" name=\"lastName\" id=\"lastName\" value={this.state.lastName} onChange={this.handleChange} />\n                            </FormGroup>\n                        </Col>\n                        {/* <br/> */}\n                        <Col>\n                            <FormGroup>\n                                <Label htmlFor=\"address\">Address:</Label>\n                                <Input type=\"text\" name=\"address\" id=\"address\" value={this.state.address} onChange={this.handleChange} />\n                            </FormGroup>\n                        </Col>\n                        {/* <br/> */}\n                        <Col>\n                            <Button color=\"primary\" type=\"submit\" >Save</Button>\n                        </Col>\n                    </Form>\n\n                    <br/>\n\n                    <h3>Google Account Info</h3>\n                    {\n                        this.googleConnectSwitch()\n                    }\n                    \n                </Container>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default UserProfile\n"]},"metadata":{},"sourceType":"module"}
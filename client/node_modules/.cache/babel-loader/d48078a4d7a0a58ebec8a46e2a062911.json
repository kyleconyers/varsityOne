{"ast":null,"code":"import _classCallCheck from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/kylemac/Desktop/classwork/properChannels/client/src/components/CenterBody/centerBody.js\";\nimport React from \"react\";\nimport \"./centerBody.css\";\n\nvar CenterBody = function CenterBody(props) {\n  return React.createElement(\"div\", {\n    className: \"centerBody\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4\n    },\n    __self: this\n  }, props.children);\n}; // const React = require('react')\n\n\nvar ReactDOM = require('react-dom');\n\nvar request = require('axios');\n\nvar url = 'http://localhost:3000/messages';\nvar fD = ReactDOM.findDOMNode;\n\nvar NewMessage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NewMessage, _React$Component);\n\n  function NewMessage(props) {\n    var _this;\n\n    _classCallCheck(this, NewMessage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NewMessage).call(this, props));\n    _this.addMessage = _this.addMessage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.keyup = _this.keyup.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(NewMessage, [{\n    key: \"addMessage\",\n    value: function addMessage() {\n      var name = fD(this.refs.name).value.trim();\n      var category = fD(this.refs.category).value.trim();\n      var title = fD(this.refs.title).value.trim();\n      var message = fD(this.refs.message).value.trim();\n\n      if (!name || !message) {\n        return console.error('Name and message cannot be empty');\n      }\n\n      this.props.addMessageCb({\n        name: name,\n        category: category,\n        title: title,\n        message: message\n      });\n      fD(this.refs.name).value = '';\n      fD(this.refs.category).value = '';\n      fD(this.refs.title).value = '';\n      fD(this.refs.message).value = '';\n    }\n  }, {\n    key: \"keyup\",\n    value: function keyup(e) {\n      if (e.keyCode == 13) return this.addMessage();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"row-fluid\",\n        id: \"new-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"span12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"well form-inline\",\n        onKeyUp: this.keyup,\n        onSubmit: this.addMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        className: \"input-small\",\n        placeholder: \"\\u0412\\u0430\\u0448\\u0435 \\u0438\\u043C\\u044F\",\n        ref: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"category\",\n        className: \"input-small\",\n        placeholder: \"\\u043A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F\",\n        ref: \"category\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        className: \"input-small\",\n        placeholder: \"\\u0442\\u0435\\u043C\\u0430\",\n        ref: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"textarea\",\n        name: \"message\",\n        className: \"\",\n        rows: \"7\",\n        placeholder: \"\\u0442\\u0435\\u043A\\u0441\\u0442 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u044F\",\n        ref: \"message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(\"a\", {\n        id: \"send\",\n        className: \"btn btn-primary\",\n        onClick: this.addMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"\\u041E\\u041F\\u0423\\u0411\\u041B\\u0418\\u041A\\u041E\\u0412\\u0410\\u0422\\u042C\"))));\n    }\n  }]);\n\n  return NewMessage;\n}(React.Component);\n\nvar MessageBoard =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(MessageBoard, _React$Component2);\n\n  function MessageBoard(ops) {\n    var _this2;\n\n    _classCallCheck(this, MessageBoard);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(MessageBoard).call(this, ops));\n    _this2.addMessage = _this2.addMessage.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    if (_this2.props.messages) _this2.state = {\n      messages: _this2.props.messages\n    };\n    return _this2;\n  }\n\n  _createClass(MessageBoard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      request.get(url).then(function (response) {\n        return response.data;\n      }).then(function (messages) {\n        console.log(messages);\n\n        if (!messages || !messages.length) {\n          return;\n        }\n\n        console.log(messages);\n\n        _this3.setState({\n          messages: messages\n        });\n      });\n    }\n  }, {\n    key: \"addMessage\",\n    value: function addMessage(message) {\n      var _this4 = this;\n\n      var messages = this.state.messages;\n      request.post(url, message).then(function (result) {\n        return result.data;\n      }).then(function (data) {\n        if (!data) {\n          return console.error('Failed to save');\n        }\n\n        console.log('Saved!');\n        messages.unshift(data);\n\n        _this4.setState({\n          messages: messages\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(NewMessage, {\n        messages: this.state.messages,\n        addMessageCb: this.addMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(MessageList, {\n        messages: this.state.messages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return MessageBoard;\n}(React.Component);\n\nexport default CenterBody;\nmodule.exports = MessageBoard;","map":{"version":3,"sources":["/Users/kylemac/Desktop/classwork/properChannels/client/src/components/CenterBody/centerBody.js"],"names":["React","CenterBody","props","children","ReactDOM","require","request","url","fD","findDOMNode","NewMessage","addMessage","bind","keyup","name","refs","value","trim","category","title","message","console","error","addMessageCb","e","keyCode","Component","MessageBoard","ops","messages","state","get","then","response","data","log","length","setState","post","result","unshift","module","exports"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./centerBody.css\"\n\nconst CenterBody = props => <div className=\"centerBody\">{props.children}</div>\n\n// const React = require('react')\nconst ReactDOM = require('react-dom')\nconst request = require('axios')\n\nconst url = 'http://localhost:3000/messages'\nconst fD = ReactDOM.findDOMNode\n\n\n\nclass NewMessage extends React.Component {\n  constructor(props) {\n    super(props)\n    this.addMessage = this.addMessage.bind(this)\n    this.keyup = this.keyup.bind(this)\n  }\n  addMessage() {\n    let name = fD(this.refs.name).value.trim()\n    let category = fD(this.refs.category).value.trim()\n    let title = fD(this.refs.title).value.trim()\n    let message = fD(this.refs.message).value.trim()\n    if (!name || !message) {\n      return console.error('Name and message cannot be empty')\n    }\n    this.props.addMessageCb({\n      name: name,\n      category: category,\n      title: title,\n      message: message\n    })\n    fD(this.refs.name).value = ''\n    fD(this.refs.category).value = ''\n    fD(this.refs.title).value = ''\n    fD(this.refs.message).value = ''\n  }\n  keyup(e) {\n    if (e.keyCode == 13) return this.addMessage()\n  }\n  render() {\n    return (\n      <div className=\"row-fluid\" id=\"new-message\">\n        <div className=\"span12\">\n          <form className=\"well form-inline\" onKeyUp={this.keyup} onSubmit={this.addMessage}>\n            <input\n              type=\"text\" name=\"username\"\n              className=\"input-small\" placeholder=\"Ваше имя\" ref=\"name\"/><br />\n            <input\n              type=\"text\" name=\"category\" className=\"input-small\"\n              placeholder=\"категория\" ref=\"category\" /><br />\n            <input\n              type=\"text\" name=\"title\" className=\"input-small\"\n              placeholder=\"тема\" ref=\"title\" /><br />\n            <input\n              type=\"textarea\" name=\"message\" className=\"\" rows=\"7\"\n              placeholder=\"текст сообщения\" ref=\"message\" /><br />\n            <a id=\"send\" className=\"btn btn-primary\"\n              onClick={this.addMessage}>ОПУБЛИКОВАТЬ</a>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nclass MessageBoard extends React.Component {\n  constructor(ops) {\n    super(ops)\n    this.addMessage = this.addMessage.bind(this)\n    if (this.props.messages)\n      this.state = {messages: this.props.messages}\n  }\n  componentDidMount() {\n    request.get(url)\n      .then(response => response.data)\n      .then(messages => {\n        console.log(messages)\n        if(!messages || !messages.length){\n          return;\n        }\n        console.log(messages)\n        this.setState({messages: messages})\n      })\n  }\n  addMessage(message) {\n    let messages = this.state.messages\n    request.post(url, message)\n      .then(result => result.data)\n      .then((data) =>{\n        if(!data){\n          return console.error('Failed to save')\n        }\n        console.log('Saved!')\n        messages.unshift(data)\n        this.setState({messages: messages})\n    })\n  }\n  render() {\n    return (\n      <div>\n        <NewMessage messages={this.state.messages} addMessageCb={this.addMessage} />\n        <MessageList messages={this.state.messages} />\n      </div>\n    )\n  }\n}\n\n\nexport default CenterBody;\nmodule.exports = MessageBoard"]},"metadata":{},"sourceType":"module"}
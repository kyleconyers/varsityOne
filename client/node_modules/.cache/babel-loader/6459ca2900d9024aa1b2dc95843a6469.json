{"ast":null,"code":"import _classCallCheck from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kylemac/Desktop/classwork/properChannels/client/src/components/MessageList/MessageList.js\";\nimport React from \"react\"; // import \"./MessageList.css\";\n\nimport Message from \"../Message\"; // const fakeData = [\n//    {\n//        district: \"1\",\n//        title: \"title\",\n//        author: \"author\",\n//        body: \"body\",\n//        category: [0],\n//    },\n//    {\n//         district: \"2\",\n//         title: \"Hey its me Bobby\",\n//         author: \"Bobby Mcgee\",\n//         body: \"A new message\",\n//         category: [0, 1],\n//     }\n// ]\n// const fetchData = (district, categories) => {\n//     /* TODO: fetch({\n//         uri: \"myawesomeuri.com/getMessages?district={district}&categories={categories}\"\n//         // finish the fetch call\n//     })*/\n//     console.log(fakeData)\n//     return fakeData.filter((d) => {\n//         return d.district === district\n//     })\n//     return fakeData\n// };\n\nvar MessageList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MessageList, _React$Component);\n\n  function MessageList(props) {\n    var _this;\n\n    _classCallCheck(this, MessageList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MessageList).call(this, props));\n    _this.state = {\n      messages: []\n    };\n    return _this;\n  }\n\n  _createClass(MessageList, [{\n    key: \"render\",\n    value: function render() {\n      var messages = this.state.messages;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, this.props.messages.map(function (message, i) {\n        return React.createElement(Message, {\n          key: i,\n          message: message,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        });\n      }));\n    } // componentDidMount(){\n    //     const messages = fetchData(this.props.district, this.props.categories);\n    //     // todo make this work with messages as a promise\n    //     this.setState({\n    //         messages: messages\n    //     });\n    // }\n\n  }]);\n\n  return MessageList;\n}(React.Component); // const MessageList = props => (\n//     <div>\n//         {props.messages.map(\n//             (message, i) => <Message key={i} {...message} /> \n//         )}\n//     </div>\n// )\n//(header) district ID/name\n//body(-messages(message-list))\n\n\nexport default MessageList;","map":{"version":3,"sources":["/Users/kylemac/Desktop/classwork/properChannels/client/src/components/MessageList/MessageList.js"],"names":["React","Message","MessageList","props","state","messages","map","message","i","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,YAApB,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAIMC,W;;;;;AACF,uBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,qFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAHc;AAOjB;;;;6BAKO;AAAA,UACIA,QADJ,GACiB,KAAKD,KADtB,CACIC,QADJ;AAEJ,aAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,KAAKF,KAAL,CAAWE,QAAX,CAAoBC,GAApB,CACG,UAACC,OAAD,EAAUC,CAAV;AAAA,eAAgB,oBAAC,OAAD;AAAS,UAAA,GAAG,EAAEA,CAAd;AAAiB,UAAA,OAAO,EAAED,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAhB;AAAA,OADH,CADD,CAAR;AAKH,K,CACD;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;EA5BsBP,KAAK,CAACS,S,GA+BhC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeP,WAAf","sourcesContent":["import React from \"react\";\n// import \"./MessageList.css\";\nimport Message from \"../Message\";\n\n\n// const fakeData = [\n//    {\n//        district: \"1\",\n//        title: \"title\",\n//        author: \"author\",\n//        body: \"body\",\n//        category: [0],\n       \n\n//    },\n//    {\n//         district: \"2\",\n//         title: \"Hey its me Bobby\",\n//         author: \"Bobby Mcgee\",\n//         body: \"A new message\",\n//         category: [0, 1],\n    \n//     }\n// ]\n// const fetchData = (district, categories) => {\n\n//     /* TODO: fetch({\n//         uri: \"myawesomeuri.com/getMessages?district={district}&categories={categories}\"\n//         // finish the fetch call\n//     })*/\n//     console.log(fakeData)\n//     return fakeData.filter((d) => {\n//         return d.district === district\n//     })\n//     return fakeData\n// };\n\n\n\nclass MessageList extends React.Component{\n    constructor(props){\n        super(props);\n        \n        this.state = {\n            messages: []\n        }\n        \n    }\n\n\n    \n\n    render(){\n        const { messages } = this.state;\n        return (<div>\n                {this.props.messages.map(\n                    (message, i) => <Message key={i} message={message} /> \n                )}\n                </div>)\n    }\n    // componentDidMount(){\n    //     const messages = fetchData(this.props.district, this.props.categories);\n    //     // todo make this work with messages as a promise\n    //     this.setState({\n    //         messages: messages\n    //     });\n\n    // }\n}\n\n// const MessageList = props => (\n    \n//     <div>\n//         {props.messages.map(\n//             (message, i) => <Message key={i} {...message} /> \n//         )}\n//     </div>\n// )\n//(header) district ID/name\n//body(-messages(message-list))\n\nexport default MessageList;"]},"metadata":{},"sourceType":"module"}
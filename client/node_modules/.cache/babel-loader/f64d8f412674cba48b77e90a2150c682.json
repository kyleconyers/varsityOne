{"ast":null,"code":"import _defineProperty from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kylemac/Desktop/classwork/properChannels/client/src/components/MessageList/MessageList.js\";\nimport React from \"react\"; // import \"./MessageList.css\";\n\nimport Message from \"../Message\"; // const fakeData = [\n//    {\n//        district: \"1\",\n//        title: \"title\",\n//        author: \"author\",\n//        body: \"body\",\n//        category: [0],\n//    },\n//    {\n//         district: \"2\",\n//         title: \"Hey its me Bobby\",\n//         author: \"Bobby Mcgee\",\n//         body: \"A new message\",\n//         category: [0, 1],\n//     }\n// ]\n// const fetchData = (district, categories) => {\n//     /* TODO: fetch({\n//         uri: \"myawesomeuri.com/getMessages?district={district}&categories={categories}\"\n//         // finish the fetch call\n//     })*/\n//     console.log(fakeData)\n//     return fakeData.filter((d) => {\n//         return d.district === district\n//     })\n//     return fakeData\n// };\n\nvar MessageList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MessageList, _React$Component);\n\n  function MessageList(props) {\n    var _this;\n\n    _classCallCheck(this, MessageList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MessageList).call(this, props));\n\n    _this.handleInputChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.getBooks = function () {\n      API.getBooks(_this.state.q).then(function (res) {\n        return _this.setState({\n          books: res.data\n        });\n      }).catch(function () {\n        return _this.setState({\n          books: [],\n          message: \"No New Books Found, Try a Different Query\"\n        });\n      });\n    };\n\n    _this.handleFormSubmit = function (event) {\n      event.preventDefault();\n\n      _this.getBooks();\n    };\n\n    _this.handleBookSave = function (id) {\n      var book = _this.state.books.find(function (book) {\n        return book.id === id;\n      }); // API.saveBook({\n      //   googleId: book.id,\n      //   title: book.volumeInfo.title,\n      //   subtitle: book.volumeInfo.subtitle,\n      //   link: book.volumeInfo.infoLink,\n      //   authors: book.volumeInfo.authors,\n      //   description: book.volumeInfo.description,\n      //   image: book.volumeInfo.imageLinks.thumbnail\n      // }).then(() => this.getBooks());\n\n    };\n\n    _this.state = {\n      messages: []\n    };\n    return _this;\n  }\n\n  _createClass(MessageList, [{\n    key: \"render\",\n    value: function render() {\n      var messages = this.state.messages;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, this.props.messages.map(function (message, i) {\n        return React.createElement(Message, {\n          key: i,\n          message: message,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        });\n      }));\n    } // componentDidMount(){\n    //     const messages = fetchData(this.props.district, this.props.categories);\n    //     // todo make this work with messages as a promise\n    //     this.setState({\n    //         messages: messages\n    //     });\n    // }\n\n  }]);\n\n  return MessageList;\n}(React.Component); // const MessageList = props => (\n//     <div>\n//         {props.messages.map(\n//             (message, i) => <Message key={i} {...message} /> \n//         )}\n//     </div>\n// )\n//(header) district ID/name\n//body(-messages(message-list))\n\n\nexport default MessageList;","map":{"version":3,"sources":["/Users/kylemac/Desktop/classwork/properChannels/client/src/components/MessageList/MessageList.js"],"names":["React","Message","MessageList","props","handleInputChange","event","target","name","value","setState","getBooks","API","state","q","then","res","books","data","catch","message","handleFormSubmit","preventDefault","handleBookSave","id","book","find","messages","map","i","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,YAApB,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAIMC,W;;;;;AACF,uBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,qFAAMA,KAAN;;AADc,UAUlBC,iBAVkB,GAUE,UAAAC,KAAK,EAAI;AAAA,0BACDA,KAAK,CAACC,MADL;AAAA,UACjBC,IADiB,iBACjBA,IADiB;AAAA,UACXC,KADW,iBACXA,KADW;;AAEzB,YAAKC,QAAL,qBACGF,IADH,EACUC,KADV;AAGD,KAfe;;AAAA,UAiBhBE,QAjBgB,GAiBL,YAAM;AACfC,MAAAA,GAAG,CAACD,QAAJ,CAAa,MAAKE,KAAL,CAAWC,CAAxB,EACGC,IADH,CACQ,UAAAC,GAAG;AAAA,eACP,MAAKN,QAAL,CAAc;AACZO,UAAAA,KAAK,EAAED,GAAG,CAACE;AADC,SAAd,CADO;AAAA,OADX,EAMGC,KANH,CAMS;AAAA,eACL,MAAKT,QAAL,CAAc;AACZO,UAAAA,KAAK,EAAE,EADK;AAEZG,UAAAA,OAAO,EAAE;AAFG,SAAd,CADK;AAAA,OANT;AAYD,KA9Be;;AAAA,UAgChBC,gBAhCgB,GAgCG,UAAAf,KAAK,EAAI;AAC1BA,MAAAA,KAAK,CAACgB,cAAN;;AACA,YAAKX,QAAL;AACD,KAnCe;;AAAA,UAqChBY,cArCgB,GAqCC,UAAAC,EAAE,EAAI;AACrB,UAAMC,IAAI,GAAG,MAAKZ,KAAL,CAAWI,KAAX,CAAiBS,IAAjB,CAAsB,UAAAD,IAAI;AAAA,eAAIA,IAAI,CAACD,EAAL,KAAYA,EAAhB;AAAA,OAA1B,CAAb,CADqB,CAGrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD,KAjDe;;AAGd,UAAKX,KAAL,GAAa;AACTc,MAAAA,QAAQ,EAAE;AADD,KAAb;AAHc;AAOjB;;;;6BA6CO;AAAA,UACIA,QADJ,GACiB,KAAKd,KADtB,CACIc,QADJ;AAEJ,aAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,KAAKvB,KAAL,CAAWuB,QAAX,CAAoBC,GAApB,CACG,UAACR,OAAD,EAAUS,CAAV;AAAA,eAAgB,oBAAC,OAAD;AAAS,UAAA,GAAG,EAAEA,CAAd;AAAiB,UAAA,OAAO,EAAET,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAhB;AAAA,OADH,CADD,CAAR;AAKH,K,CACD;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;EApEsBnB,KAAK,CAAC6B,S,GAuEhC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAe3B,WAAf","sourcesContent":["import React from \"react\";\n// import \"./MessageList.css\";\nimport Message from \"../Message\";\n\n\n// const fakeData = [\n//    {\n//        district: \"1\",\n//        title: \"title\",\n//        author: \"author\",\n//        body: \"body\",\n//        category: [0],\n       \n\n//    },\n//    {\n//         district: \"2\",\n//         title: \"Hey its me Bobby\",\n//         author: \"Bobby Mcgee\",\n//         body: \"A new message\",\n//         category: [0, 1],\n    \n//     }\n// ]\n// const fetchData = (district, categories) => {\n\n//     /* TODO: fetch({\n//         uri: \"myawesomeuri.com/getMessages?district={district}&categories={categories}\"\n//         // finish the fetch call\n//     })*/\n//     console.log(fakeData)\n//     return fakeData.filter((d) => {\n//         return d.district === district\n//     })\n//     return fakeData\n// };\n\n\n\nclass MessageList extends React.Component{\n    constructor(props){\n        super(props);\n        \n        this.state = {\n            messages: []\n        }\n        \n    }\n\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n          [name]: value\n        });\n      };\n    \n      getBooks = () => {\n        API.getBooks(this.state.q)\n          .then(res =>\n            this.setState({\n              books: res.data\n            })\n          )\n          .catch(() =>\n            this.setState({\n              books: [],\n              message: \"No New Books Found, Try a Different Query\"\n            })\n          );\n      };\n    \n      handleFormSubmit = event => {\n        event.preventDefault();\n        this.getBooks();\n      };\n    \n      handleBookSave = id => {\n        const book = this.state.books.find(book => book.id === id);\n    \n        // API.saveBook({\n        //   googleId: book.id,\n        //   title: book.volumeInfo.title,\n        //   subtitle: book.volumeInfo.subtitle,\n        //   link: book.volumeInfo.infoLink,\n        //   authors: book.volumeInfo.authors,\n        //   description: book.volumeInfo.description,\n        //   image: book.volumeInfo.imageLinks.thumbnail\n        // }).then(() => this.getBooks());\n      };\n    \n\n    render(){\n        const { messages } = this.state;\n        return (<div>\n                {this.props.messages.map(\n                    (message, i) => <Message key={i} message={message} /> \n                )}\n                </div>)\n    }\n    // componentDidMount(){\n    //     const messages = fetchData(this.props.district, this.props.categories);\n    //     // todo make this work with messages as a promise\n    //     this.setState({\n    //         messages: messages\n    //     });\n\n    // }\n}\n\n// const MessageList = props => (\n    \n//     <div>\n//         {props.messages.map(\n//             (message, i) => <Message key={i} {...message} /> \n//         )}\n//     </div>\n// )\n//(header) district ID/name\n//body(-messages(message-list))\n\nexport default MessageList;"]},"metadata":{},"sourceType":"module"}
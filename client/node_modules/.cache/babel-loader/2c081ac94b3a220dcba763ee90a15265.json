{"ast":null,"code":"import _classCallCheck from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kylemac/Desktop/classwork/properChannels/client/src/components/Board/Board.js\";\nimport React, { Component } from \"react\"; // import \"./Board.css\";\n\nimport MessageList from \"../MessageList\";\nimport API from \"../../utils/API\";\nimport { Col, Row, Container } from \"../Grid\";\nimport { List } from \"../List\";\nimport Message from \"../Message\"; //props.messages\n// const fakeMessages = [\n//     {\n//         district: \"1\",\n//         title: \"title\",\n//         author: \"author\",\n//         body: \"body\",\n//         category: [0],\n//         // title: \"title\",\n//         // name: \"name\",\n//         // category: \"category\",\n//         // message: \"message\"\n//     }\n// ];\n\n{\n  /* <h3>{props.title}</h3>\n       <h3>{props.name}</h3> \n       <h4>{props.category}</h4> \n       <h4>{props.message}</h4>  */\n}\n\nvar Board =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Board, _Component);\n\n  function Board() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Board);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Board)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      messages: []\n    };\n\n    _this.getSavedMessage = function () {\n      API.getSavedMessage().then(function (res) {\n        console.log(res.data);\n\n        _this.setState({\n          messages: res.data\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Board, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getSavedMessage();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Message, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Board;\n}(Component); //       const Board = props => (\n//     <div>\n//         <h3>\n//             {props.districtId}\n//         </h3>\n//         <MessageList district = \"2\" />\n//     </div>\n// )\n// (header) district ID/name\n// body(-messages(message-list))\n\n\nexport default Board;","map":{"version":3,"sources":["/Users/kylemac/Desktop/classwork/properChannels/client/src/components/Board/Board.js"],"names":["React","Component","MessageList","API","Col","Row","Container","List","Message","Board","state","messages","getSavedMessage","then","res","console","log","data","setState","catch","err"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CACA;;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,SAApC;AACA,SAASC,IAAT,QAAqB,SAArB;AACA,OAAOC,OAAP,MAAoB,YAApB,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;;AAGA;AAAC;;;;AAGkC;;IAEvBC,K;;;;;;;;;;;;;;;;;UAGRC,K,GAAQ;AACJC,MAAAA,QAAQ,EAAE;AADN,K;;UAORC,e,GAAkB,YAAM;AACpBT,MAAAA,GAAG,CAACS,eAAJ,GACGC,IADH,CACQ,UAAAC,GAAG,EAAG;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;;AACA,cAAKC,QAAL,CAAc;AACZP,UAAAA,QAAQ,EAAEG,GAAG,CAACG;AADF,SAAd;AAEG,OALP,EAOGE,KAPH,CAOS,UAAAC,GAAG;AAAA,eAAIL,OAAO,CAACC,GAAR,CAAYI,GAAZ,CAAJ;AAAA,OAPZ;AAQD,K;;;;;;;wCAbiB;AAChB,WAAKR,eAAL;AACD;;;6BAYQ;AACP,aACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,IAAI,EAAC,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CADF,CAFF,CADF;AA+BD;;;;EApDmBX,S,GAuD1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeQ,KAAf","sourcesContent":["import React, {Component} from \"react\";\n// import \"./Board.css\";\nimport MessageList from \"../MessageList\";\nimport API from \"../../utils/API\";\nimport { Col, Row, Container } from \"../Grid\";\nimport { List } from \"../List\";\nimport Message from \"../Message\";\n\n//props.messages\n// const fakeMessages = [\n//     {\n\n//         district: \"1\",\n//         title: \"title\",\n//         author: \"author\",\n//         body: \"body\",\n//         category: [0],\n\n\n//         // title: \"title\",\n//         // name: \"name\",\n//         // category: \"category\",\n//         // message: \"message\"\n//     }\n// ];\n\n\n{/* <h3>{props.title}</h3>\n      <h3>{props.name}</h3> \n      <h4>{props.category}</h4> \n      <h4>{props.message}</h4>  */}\n\n      class Board extends Component {\n     \n    \n    state = {\n        messages: []\n      };\n    componentDidMount() {\n        this.getSavedMessage();\n      }\n    \n    getSavedMessage = () => {\n        API.getSavedMessage()\n          .then(res =>{\n            console.log(res.data)\n            this.setState({\n              messages: res.data\n            })}\n          )\n          .catch(err => console.log(err));\n      };\n      render() {\n        return (\n          <Container>\n            \n            <Row>\n              <Col size=\"md-12\">\n              <Message></Message>\n                {/* <MessageList title=\"Results\">\n                  {this.state.message ? (\n                    <List>\n                      {this.state.message.map(message => (\n                        <Message\n                          key={message.id}\n                          title={message.title}\n                          \n                         \n                          author={message.author}\n                          body={message.body}\n                          category={message.category}\n                          \n                        />\n                      ))}\n                    </List>\n                  ) : (\n                    <h2 className=\"text-center\">{this.state.message}</h2>\n                  )}\n                </MessageList> */}\n              </Col>\n            </Row>\n            \n          </Container>\n        );\n      }\n    }\n\n//       const Board = props => (\n//     <div>\n//         <h3>\n//             {props.districtId}\n//         </h3>\n//         <MessageList district = \"2\" />\n//     </div>\n// )\n// (header) district ID/name\n// body(-messages(message-list))\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}
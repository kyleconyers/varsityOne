{"ast":null,"code":"import _defineProperty from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kylemac/Desktop/classwork/properChannels/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kylemac/Desktop/classwork/properChannels/client/src/components/Board/Board.js\";\nimport React, { Component } from \"react\"; // import \"./Board.css\";\n\nimport MessageList from \"../MessageList\";\nimport API from \"../../utils/API\";\nimport { Col, Row, Container } from \"../Grid\";\nimport { List } from \"../List\";\nimport Message from \"../Message\";\nimport Form from \"../Form\";\nimport Card from \"../Card\"; //props.messages\n// const fakeMessages = [\n//     {\n//         district: \"1\",\n//         title: \"title\",\n//         author: \"author\",\n//         body: \"body\",\n//         category: [0],\n//         // title: \"title\",\n//         // name: \"name\",\n//         // category: \"category\",\n//         // message: \"message\"\n//     }\n// ];\n// Array.filter( function( item ) {\n//   return item.uSState === 'WA'\n// }\n\n{\n  /* <h3>{props.title}</h3>\n       <h3>{props.name}</h3> \n       <h4>{props.category}</h4> \n       <h4>{props.message}</h4>  */\n}\n\nvar Board =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Board, _Component);\n\n  function Board() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Board);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Board)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      messages: [],\n      currentUsState: \"\"\n    };\n\n    _this.getSavedMessage = function () {\n      API.getSavedMessage().then(function (res) {\n        console.log(res.data);\n\n        _this.setState({\n          messages: res.data\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleInputChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value)); // console.log(\"inside change\")\n\n    };\n\n    _this.handleMessageSave = function (id) {\n      // const message = this.state.message.find(message => message.id === id);\n      console.log(_this.props);\n      API.saveMessage({\n        //this.state.currentusstate\n        forum_id: \"5c50c8d52bc45519e9f1b9b9\",\n        user_id: _this.props.user._id,\n        content: _this.state.q,\n        date: new Date()\n      }).then(function () {\n        return _this.getSavedMessage();\n      });\n    };\n\n    _this.handleFormSubmit = function (event) {\n      event.preventDefault();\n\n      _this.handleMessageSave(); // this.db.insert();\n\n\n      console.log(\"inside sumbit\");\n    };\n\n    return _this;\n  }\n\n  _createClass(Board, [{\n    key: \"componentDidMount\",\n    //passvvvvv form_id or whatever message board we are on \n    value: function componentDidMount() {\n      this.getSavedMessage();\n      API.getForum().then(function (data) {\n        return console.log(data);\n      }).th;\n    }\n  }, {\n    key: \"render\",\n\n    /*\n    */\n    value: function render() {\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Card, {\n        title: \"Post Content\",\n        icon: \"far fa-book\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Form, {\n        handleInputChange: this.handleInputChange,\n        handleFormSubmit: this.handleFormSubmit,\n        q: this.state.q,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      })), React.createElement(MessageList, {\n        messages: this.state.messages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Board;\n}(Component); //       const Board = props => (\n//     <div>\n//         <h3>\n//             {props.districtId}\n//         </h3>\n//         <MessageList district = \"2\" />\n//     </div>\n// )\n// (header) district ID/name\n// body(-messages(message-list))\n\n\nexport default Board;","map":{"version":3,"sources":["/Users/kylemac/Desktop/classwork/properChannels/client/src/components/Board/Board.js"],"names":["React","Component","MessageList","API","Col","Row","Container","List","Message","Form","Card","Board","state","messages","currentUsState","getSavedMessage","then","res","console","log","data","setState","catch","err","handleInputChange","event","target","name","value","handleMessageSave","id","props","saveMessage","forum_id","user_id","user","_id","content","q","date","Date","handleFormSubmit","preventDefault","getForum","th"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\n// import \"./Board.css\";\nimport MessageList from \"../MessageList\";\nimport API from \"../../utils/API\";\nimport { Col, Row, Container } from \"../Grid\";\nimport { List } from \"../List\";\nimport Message from \"../Message\";\nimport Form from \"../Form\";\nimport Card from \"../Card\";\n\n//props.messages\n// const fakeMessages = [\n//     {\n\n//         district: \"1\",\n//         title: \"title\",\n//         author: \"author\",\n//         body: \"body\",\n//         category: [0],\n\n\n//         // title: \"title\",\n//         // name: \"name\",\n//         // category: \"category\",\n//         // message: \"message\"\n//     }\n// ];\n\n// Array.filter( function( item ) {\n//   return item.uSState === 'WA'\n// }\n{/* <h3>{props.title}</h3>\n      <h3>{props.name}</h3> \n      <h4>{props.category}</h4> \n      <h4>{props.message}</h4>  */}\n\n      class Board extends Component {\n     \n    \n    state = {\n        messages: [],\n        currentUsState: \"\"\n      };\n      //passvvvvv form_id or whatever message board we are on \n    componentDidMount() {\n        this.getSavedMessage();\n        API.getForum().then(data => console.log(data)).th;\n\n      }\n    \n    getSavedMessage = () => {\n        API.getSavedMessage()\n          .then(res =>{\n            console.log(res.data)\n            this.setState({\n              messages: res.data\n            })}\n          )\n          .catch(err => console.log(err));\n      };\n\n     //This Green Part needs to be turned into message section\n     ////////////////////////////////\n      handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n          [name]: value\n        });\n        // console.log(\"inside change\")\n      };\n   \n    handleMessageSave = id => {\n        // const message = this.state.message.find(message => message.id === id);\n      \n        console.log(this.props)\n        API.saveMessage({\n          //this.state.currentusstate\n          forum_id: \"5c50c8d52bc45519e9f1b9b9\",\n          user_id: this.props.user._id,\n          content: this.state.q,\n          date: new Date()\n        }).then(() => this.getSavedMessage());\n      };\n      // resUser._id\n     \n      handleFormSubmit = event => {\n        event.preventDefault();\n        this.handleMessageSave();\n        // this.db.insert();\n        console.log(\"inside sumbit\")\n      };\n    \n      \n\n      /*\n      */\n    \n      render() {\n        return (\n          <Container>\n            \n            <Row>\n              <Col size=\"md-12\">\n              <Card title=\"Post Content\" icon=\"far fa-book\">\n                  <Form\n                     handleInputChange={this.handleInputChange}\n                     handleFormSubmit={this.handleFormSubmit}\n                     q={this.state.q}\n                    />\n              </Card>  \n\n                  <MessageList \n                    messages = {this.state.messages}\n                  />\n\n              </Col>\n             </Row>\n\n            {/* <Row>\n              <Message message={this.state.messages[0]}>\n              \n              </Message> \n                 <MessageList title=\"Results\">\n                  {this.state.message ? (\n                    <List>\n                      {this.state.message.map(message => (\n                        <Message\n                          key={message.id}\n                          title={message.title}\n                          \n                         \n                          author={message.author}\n                          body={message.body}\n                          category={message.category}\n                          \n                        />\n                      ))}\n                    </List>\n                  ) : (\n                    <h2 className=\"text-center\">{this.state.message}</h2>\n                  )}\n                </MessageList> \n               \n            </Row> */}\n            \n          </Container>\n        );\n      }\n    }\n\n//       const Board = props => (\n//     <div>\n//         <h3>\n//             {props.districtId}\n//         </h3>\n//         <MessageList district = \"2\" />\n//     </div>\n// )\n// (header) district ID/name\n// body(-messages(message-list))\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}